plugins {
    id 'java'
    id 'maven'
    id 'idea'
    id 'eclipse'

    id 'net.minecrell.licenser' version '0.4.1'
}

defaultTasks 'clean', 'checkLicenses', 'build'

group = 'net.caseif.moslib'
version = '2.0.0'

// Extended project information
ext {
    projectName = 'moslib'
    description = 'Tiny Java library for modeling 6502 instructions.'
    author = 'Max Roncace'
    inceptionYear = '2018'
    packaging = 'jar'

    url = 'https://github.com/caseif/moslib'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    deployerJars
}

// Read source files using UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

license {
    header getRootProject().file('HEADER.txt')
    exclude '**/lib/**/*.java'

    ext {
        year = '2018'
        author = 'Max Roncace'
        email = 'mproncace@gmail.com'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.9'
}

jar.manifest.mainAttributes(
        'Implementation-Title': name,
        'Implementation-Version': version
)

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

artifacts {
    archives jar
    archives sourceJar
}

wrapper {
    gradleVersion = '4.10.2'
}

uploadArchives {
    repositories.mavenDeployer {
        setUniqueVersion(true)
        configuration = configurations.deployerJars

        if (project.hasProperty('mavenRepo')) {
            repository(url: project.property('mavenRepo')) {
                if (project.hasProperty('mavenPrivKey')) {
                    authentication(userName: project.property('mavenUser'), privateKey: project.property('mavenPrivKey'))
                } else {
                    authentication(userName: project.property('mavenUser'), password: project.property('mavenPass'))
                }
            }
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.ext.projectName
            project {
                packaging 'jar'
                description project.ext.description
                url project.ext.url

                scm {
                    url project.ext.url
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
